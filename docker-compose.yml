version: "3.8"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.8
    container_name: kafka
    volumes:
      - "kafka_data:/bitnami"
    networks:
      - socio-skeleton
    environment:
      # Kraft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      #Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  kafbat-ui:
    container_name: kafbat-ui
    image: ghcr.io/kafbat/kafka-ui:latest
    ports:
      - "8090:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTER_0_NAME: local
      KAFKA_CLUSTER_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTER_0_KSQLDBSERVER: http://ksqldb0:8088

  notification-db:
    image: postgres
    container_name: notification-db
    environment:
      - POSTGRES_DB=notificationDB
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - socio-skeleton
    volumes:
      - notification-db-data:/var/lib/postgresql/data

  posts-db:
    image: postgres
    container_name: posts-db
    environment:
      - POSTGRES_DB=postsDB
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - socio-skeleton
    volumes:
      - posts-db-data:/var/lib/postgresql/data

  user-db:
    image: postgres
    container_name: user-db
    environment:
      - POSTGRES_DB=userDB
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - socio-skeleton
    volumes:
      - user-db-data:/var/lib/postgresql/data

  connections-db:
    image: neo4j
    container_name: connections-db
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474" #HTTP Port
      - "7687:7687" #Bolt Port
    volumes:
      - connections-db-data:/data
    networks:
      - socio-skeleton

  discovery-server:
    image: nilay11/socioskeleton/discovery-server
    container_name: discovery-server
    networks:
      - socio-skeleton
    ports:
      - "8761:8761"


  notification-service:
    image: nilay11/socioskeleton/notification-service
    container_name: notification-service
    networks:
      - socio-skeleton
    depends_on:
      - discovery-server
      - notification-db
      - kafka
    ports:
      - "8050:8050"

  posts-service:
    image: nilay11/socioskeleton/posts-service
    container_name: posts-service
    networks:
      - socio-skeleton
    depends_on:
      - discovery-server
      - posts-db
      - kafka
    ports:
      - "8010:8010"

  user-service:
    image: nilay11/socioskeleton/user-service
    container_name: user-service
    networks:
      - socio-skeleton
    ports:
      - "8020:8020"
    depends_on:
      - discovery-server
      - user-db
      - kafka

  connections-service:
    image: nilay11/socioskeleton/connections-service
    container_name: connections-service
    networks:
      - socio-skeleton
    depends_on:
      - discovery-server
      - connections-db
      - kafka

  api-gateway:
    image: nilay11/socioskeleton/api-gateway
    container_name: api-gateway
    networks:
      - socio-skeleton
    ports:
      - "8030:8030"
    depends_on:
      - discovery-server

networks:
  socio-skeleton:


volumes:
  kafka_data:
  notification-db-data:
  posts-db-data:
  user-db-data:
  connections-db-data:
